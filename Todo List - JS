**Problem Statement**
Make a Todo List in which users can

1. Add a task to the list
2. Delete a task from the list
3. Mark a task as completed

4. Add a task to the list: The users will type a task in the text input box and when they click on the 'Add' button, an element should get added within the < ul class="todo-list"> </ul>
   Note: Use preventDefault() Event Method to prevent it from submitting a form, since the Add button in HTML is of type submit.

The element added within the < ul class="todo-list"> </ul> must contain the following in the given order:
(a) A list element displaying Task inputted by the user with class todo-item
(b) A 'Complete button' with class complete-btn
(c) A 'Delete button' with class trash-btn

2. Mark a task as completed: On clicking the completed button, the text of the corresponding task that was inputted by the user should get strike-through. e.g. make a coffee and on clicking the completed button again the strike-through should be removed. e.g. make a coffee
   Note: Only use the CSS property text-decoration: line-through solid rgb(0, 0, 0); to implement this.

The completed button must have complete-btn as a class and should function as explained, otherwise your test cases will not pass.

3. Delete a task from the list: On clicking the Delete Button, the corresponding component that contains that Delete button should get deleted.

The Delete button must have trash-btn as a class and should function as explained above, otherwise your test cases will not pass.

Do not make any changes to the HTML file.
<img src="https://d3dyfaf3iutrxo.cloudfront.net/thumbnail/assignment/question/2862ab4c88714b8fb8c01bdb16715bb0.gif" alt="To Do List">

**Solution**:
**HTML**:

<!-- Do not make any changes to the HTML file -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <link rel="stylesheet" href="style.css">

    <title>TO Do List</title>

</head>
<body>
    <header>My Todo list</header>
    <form>
        <div>
            <input type="text" class="todo-input">
            <button type="submit" class="todo-button">ADD</button>
        </div>
    </form>

    <div class="todo-container">
        <ul class="todo-list">

        </ul>
    </div>

    <script src="./app.js"></script>

</body>
</html>

**CSS**:
/_ css code goes here _/
.nop{
text-decoration : line-through solid rgb(0,0,0);
}

**JavaScript**:
// javascript code goes here
const addB = document.getElementsByClassName('todo-button')[0];
const listB = document.getElementsByClassName('todo-list')[0];

function addElement(){
const textB = document.getElementsByClassName('todo-input')[0];
const inputText = textB.value;
console.log(inputText);
if(inputText){
createItem(inputText);
}
}

function createItem(value){
const newD = document.createElement('div');
const item = document.createElement('li');
item.setAttribute('class','todo-item');
item.innerText = value;

    const complete = document.createElement('button');
    complete.innerText = "completed";
    complete.setAttribute('class','complete-btn');
    const trash = document.createElement('button');
    trash.innerText = "delete";
    trash.setAttribute('class','trash-btn');

    newD.append(...[item, complete, trash]);
    listB.appendChild(newD);

}

addB.addEventListener('click',function(event){
event.preventDefault();
addElement();

});

document.addEventListener('click',function(event){
if(event.target.className === "trash-btn"){

        const removeItem = event.target.parentNode ;

        removeItem.remove();
    }
    else if(event.target.className === "complete-btn"){
        const removeItem = event.target.parentNode.childNodes[0] ;
        if(removeItem.classList.contains('nop')){
            removeItem.classList.remove('nop');
        }
        else
        {
            removeItem.classList.add('nop');
        }


    }

})

**TestCases**:
can delete a task on clicking delete button **Passed**
can remove the strike-through on toggling the complete button again **Passed**
can strike-through item on toggling the complete button **Passed**
can add new todo items to the list **Passed**
